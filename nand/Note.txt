

= coding note = 
1, If you use rodata in your function(maybe, more than 3chars),
	in the front of this function, asm need copy rodata from .rodata segement
	into stack. And, request memcpy() at this moment.
2,
	Linux line end with '\n' (10)
	windows line end with '\r\n' (1310)


= gpio config =
1, mode config
NCON = 0
GPG13 = 1
GPG14 = 1
GPG15 = 0
page = 512bytes, 4 address cycle, 8-bit bus width
2, functions
GPA22 -> nFCE
GPA20 -> nFRE
GPA19 -> nFWE
GPA18 -> ALE
GPA17 -> CLE
G6	  -> fRnB(busy)

= timing = 
1, 1 Hclk cycle = 7.4ns
2, SoC
	ALE/CLE setup time = TACLS
	ALE/CLE hold  time = TWRPH0 + TWRPH1
	cmd/addr cycle time = TWRPH1
	nWE/nRE hold  time = TWRPH0
	data cycle time = TWRPH1
3, nand flash
	CLE/ALE/CE setup time >= 0
	CLE/ALE/CE hold time  >= 10
	data setup time >= 20
	data hold  time >= 10
	WE pulse width >= 25
	write cycle time >= 50
	WE high hold time >= 15
4, result
	TACLS >= 0			-> TACLS  = 1
	TWRPH0 >= 25(35)	-> TWRPH0 = 35/7.4 - 1 = 4
	TWRPH1 >= 15		-> TWRPH1 = 15/7.4 - 1 = 1

Note: If CE setup time < 10, WE pulse width must >= 35.

= nand command =
1, Standard NAND flash commands:
#define NAND_CMD_READ0		0
#define NAND_CMD_READ1		1
#define NAND_CMD_READ2		0x50 /* oob read */
#define NAND_CMD_READID		0x90
#define NAND_CMD_RESET      0xff
#define NAND_CMD_SEQIN      0x80
#define NAND_CMD_PAGEPROG0	0x10	/* true */
#define NAND_CMD_PAGEPROG1	0x11	/* dummy */
#define NAND_CMD_ERASE1		0x60
#define NAND_CMD_ERASE2     0xd0
#define NAND_CMD_STATUS     0x70
#define NAND_CMD_STATUS_MULTI   0x71

2, copy back
	- copy back true : 0x00-> 0x8a-> 0x10
	- copy back dummy: 0x03-> 0x8a-> 0x11

3, multi-plane block erase
	0x60 -> 0x60 -> 0xd0
= size =
column addr: A0~A8 (A8 set by READ0/1/2 command)
page addr: A9~A25
block addr: A14~A25

= memory map =
+---------------+  <- 0x0
|   Nand.bin    |
+---------------+
|   reserved    |
+---------------+  <- (0xFFF - 1024) & ~0x7
|   image       |
+---------------+
|   stack       |
+---------------+  <- 0xFFF & ~0x7
